{
  parserClass="de.hszemi.rmsplugin.parser.RmsParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Rms"
  psiImplClassSuffix="Impl"
  psiPackage="de.hszemi.rmsplugin.psi"
  psiImplPackage="de.hszemi.rmsplugin.impl"

  elementTypeHolderClass="de.hszemi.rmsplugin.psi.RmsTypes"
  elementTypeClass="de.hszemi.rmsplugin.psi.RmsElementType"
  tokenTypeClass="de.hszemi.rmsplugin.psi.RmsTokenType"
}

rmsFile ::= item_*

private item_ ::= (section|hashmacro|if_block|random_block|COMMENT|CRLF)



hashmacro ::= KEYWORD_HASHMACRO hashmacro_name? INTEGER?

hashmacro_name ::= CONST_NAME | FILENAME


private section ::= (player_setup | land_generation | elevation_generation | cliff_generation | terrain_generation |
                    connection_generation | objects_generation)

player_setup ::= HEADER_PLAYER_SETUP (player_setup_command|CRLF)*
private player_setup_command ::= (command|COMMAND_PLAYER_SETUP|COMMENT)
land_generation ::= HEADER_LAND_GENERATION (land_generation_command|CRLF)*
private land_generation_command ::= (command|COMMAND_LAND_GENERATION|COMMENT)
elevation_generation ::= HEADER_ELEVATION_GENERATION (elevation_generation_command|CRLF)*
private elevation_generation_command ::= (command|COMMAND_ELEVATION_GENERATION|COMMENT)
cliff_generation ::= HEADER_CLIFF_GENERATION (cliff_generation_command|CRLF)*
private cliff_generation_command ::= (command|COMMAND_CLIFF_GENERATION|COMMENT)
terrain_generation ::= HEADER_TERRAIN_GENERATION (terrain_generation_command|CRLF)*
private terrain_generation_command ::= (command|COMMAND_TERRAIN_GENERATION|COMMENT)
connection_generation ::= HEADER_CONNECTION_GENERATION (connection_generation_command|CRLF)*
private connection_generation_command ::= (command|COMMAND_CONNECTION_GENERATION|COMMENT)
objects_generation ::= HEADER_OBJECTS_GENERATION (objects_generation_command|CRLF)*
private objects_generation_command ::= (command|COMMAND_OBJECTS_GENERATION|COMMENT)

command ::= hashmacro | brackets_command | non_brackets_command

random_block ::= START_RANDOM (PERCENT_CHANCE INTEGER command*)* END_RANDOM

if_block ::= IF_STATEMENT CONST_NAME command* (ELSEIF_STATEMENT CONST_NAME command*)* (ELSE_STATEMENT command*)* ENDIF_STATEMENT

private non_brackets_command ::= if_block | random_block | two_or_more_parameter_command | one_parameter_command | no_parameter_command | COMMENT

brackets_command ::= (if_block | one_parameter_command | no_parameter_command ) LEFT_BRACKET (non_brackets_command|CRLF)* RIGHT_BRACKET
two_or_more_parameter_command ::= COMMAND_NAME (CONST_NAME|INTEGER) (CONST_NAME|INTEGER) (CONST_NAME|INTEGER)? (CONST_NAME|INTEGER)?
one_parameter_command ::= COMMAND_NAME (CONST_NAME|INTEGER)
no_parameter_command ::= COMMAND_NAME
